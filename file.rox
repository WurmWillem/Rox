proces fib(n) {
  roep n;
  als n <= 1 geef n;
  geef fib(n - 2) + fib(n - 1);
}

proces t(x) {
  als x >= 5 geef x;
  roep x;
  t(x+1);
}
//t(0);

//voor i van 0 tot 10
 roep fib(2);

/*
   proces d(x) {
   roep x;
   geef 3;
   roep x;
   }
   roep d(5);

laat x = 1 + 2;
scanner     -> Token[Var, x, equals, 1, +, 2, Semicolon]
parser      -> Stmt::Var(x, expr::binary(1, +, 2))
interpreter -> calculates 1 + 2 = 3, and adds (x, Value::3) to hash

print(x)
scanner -> print, x
parser -> Stmt::print(x)
interpreter -> evaluates x by looking in hashmap for name x
and prints it
*/
