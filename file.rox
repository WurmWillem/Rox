laat t1 = clock();
laat i = 0;
laat current = 1;
terwijl i < 10^7 {
   current = current * 1.00001;
   i = i + 1;
}
roep current;

laat t2 = clock();
roep t2 - t1;


laat t1 = clock();
laat current = 1;
voor i van 0 tot 10^7 {
   current = current * 1.00001;
}
roep current;

laat t2 = clock();
roep t2 - t1;

/*
laat x = 1 + 2;
scanner     -> Token[Var, x, equals, 1, +, 2, Semicolon]
parser      -> Stmt::Var(x, expr::binary(1, +, 2))
interpreter -> calculates 1 + 2 = 3, and adds (x, Value::3) to hash

print(x)
scanner -> print, x
parser -> Stmt::print(x)
interpreter -> evaluates x by looking in hashmap for name x
and prints it
*/
